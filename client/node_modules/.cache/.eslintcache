[{"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\App.js":"1","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\TransactionPage.jsx":"2","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\Receipt.jsx":"3","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\InvoicePage.jsx":"4","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\SessionDashboard.jsx":"5","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\NewSupply.jsx":"6","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\index.js":"7","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\reportWebVitals.js":"8","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\Dashboard.jsx":"9","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\CloseoutPage.jsx":"10"},{"size":1289,"mtime":1648832557753,"results":"11","hashOfConfig":"12"},{"size":1618,"mtime":1648768429204,"results":"13","hashOfConfig":"12"},{"size":832,"mtime":1648768429203,"results":"14","hashOfConfig":"12"},{"size":2890,"mtime":1648771660383,"results":"15","hashOfConfig":"12"},{"size":5275,"mtime":1648775891870,"results":"16","hashOfConfig":"12"},{"size":4008,"mtime":1648768670261,"results":"17","hashOfConfig":"12"},{"size":611,"mtime":1648693471742,"results":"18","hashOfConfig":"12"},{"size":362,"mtime":1648415622866,"results":"19","hashOfConfig":"12"},{"size":4203,"mtime":1648833902437,"results":"20","hashOfConfig":"12"},{"size":1685,"mtime":1648834018716,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q5brye",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\App.js",[],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\TransactionPage.jsx",[],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\Receipt.jsx",["55"],[],"import {useHistory, useParams} from 'react-router-dom';\r\n\r\nconst Receipt = () => {\r\n    const history = useHistory();\r\n    const {standId, transactionId} = useParams();\r\n\r\n    const backToSessionDashboard = () => {\r\n        history.push(`/session/${standId}`);\r\n    };\r\n\r\n    return (\r\n        <div style={{padding:\"25px\", margin:\"25px\", border:\"solid black 2px\"}}>\r\n            <h1>Thank You!</h1>\r\n            <p>Would you like an emailed receipt?</p>\r\n            <input />\r\n            <div>\r\n                <button className=\"btn btn-success\" style={{margin:\"15px\"}} onClick={()=>backToSessionDashboard()}>Yes</button>\r\n                <button className=\"btn btn-warning\" style={{margin:\"15px\"}} onClick={()=>backToSessionDashboard()}>No Thanks</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receipt;","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\InvoicePage.jsx",["56"],[],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\nconst InvoicePage = () => {\r\n    const history = useHistory();\r\n    const {standId, transactionId} = useParams();\r\n    const [transaction, setTransaction] = useState({});\r\n    const [stand, setStand] = useState({});\r\n    const [tip, setTip] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/stands/${standId}`)\r\n        .then((res)=>{\r\n            setStand(res.data);\r\n            console.log(res.data, stand, \"axios response for the stand\");\r\n            console.log(stand, 'stand after setting stand to axios response')\r\n        })\r\n        .catch((err)=>console.log(err))\r\n        \r\n        axios.get(`http://localhost:8000/api/transactions/${transactionId}`)\r\n        .then((res)=> {\r\n            console.log(res);\r\n            setTransaction(res.data)\r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        console.log(transaction, \"this is the transaction\");\r\n\r\n    }, []) \r\n    \r\n    const toReceipt = (e) => {\r\n        e.preventDefault();\r\n\r\n        const updatedTransaction = {\r\n            ...transaction,\r\n            tip: parseInt(tip),\r\n            price: 4*transaction.lemonades\r\n        }\r\n\r\n        axios.put(`http://localhost:8000/api/transactions/${transactionId}`, updatedTransaction)\r\n        .then((res)=> {\r\n            console.log(res.data)\r\n            setTransaction(updatedTransaction)\r\n            })\r\n        .catch((err)=>console.log(err))\r\n\r\n        const updatedStand = {\r\n            ...stand,\r\n            total_sales: stand.total_sales + updatedTransaction.price,\r\n            total_cups: stand.total_cups + updatedTransaction.lemonades,\r\n            total_tips: stand.total_tips + parseInt(tip)\r\n        }\r\n\r\n        console.log(stand, 'after put request updating stand')\r\n\r\n        axios.put(`http://localhost:8000/api/stands/${standId}`, updatedStand)\r\n        .then((res)=>{\r\n            setStand(updatedStand);\r\n            console.log(updatedStand);\r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        history.push(`/receipt/${standId}/${transactionId}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>{JSON.stringify(tip)}</p>\r\n            <form className=\"form\" style={{margin:\"25px\", padding:\"15px\", border:\"solid black 2px\"}} onSubmit={(e)=>toReceipt(e)}>\r\n                <h2>Invoice</h2>\r\n                <p>{transaction.lemonades} Lemonades @ $4/each</p>\r\n                <hr />\r\n                <p>Total Price: ${transaction.lemonades * 4}</p>\r\n                Add Gratuity: <input type=\"number\" style={{marginBottom:\"15px\"}} onChange={(e)=>setTip(e.target.value)} value={tip}/><br />\r\n                <button className=\"btn btn-primary\">Payment Received</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoicePage;","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\SessionDashboard.jsx",["57","58"],[],"import React from 'react';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\n\r\nconst SessionDashboard = () => {\r\n    const history = useHistory();\r\n    const { standId } = useParams();\r\n    const [currentStand, setCurrentStand] = useState({});\r\n    const [stands, setStands] = useState([]);\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const [allTransactions, setAllTransactions] = useState([]);\r\n\r\n    const goToTransaction = () => {\r\n        axios.post('http://localhost:8000/api/transactions/')\r\n        .then((res)=> {\r\n            let transaction = res.data;\r\n            history.push(`/transaction-page/${standId}/${transaction._id}`);\r\n        })\r\n        .catch((err)=>console.log(err))\r\n    };\r\n\r\n    const goToCloseout = () => {\r\n        \r\n        const updatedStand = {\r\n            ...currentStand,\r\n            is_open: false\r\n        }\r\n        \r\n        axios.put(`http://localhost:8000/api/stands/${standId}`, updatedStand)\r\n        .then((res)=> {\r\n            console.log(res);\r\n            setCurrentStand(updatedStand)})\r\n        .catch((err)=>console.log(err))\r\n        history.push(`/closeout/${standId}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/stands/${standId}`)\r\n        .then((res)=>setCurrentStand(res.data))\r\n        .catch((err)=>console.log(err))\r\n\r\n        axios.get('http://localhost:8000/api/stands')\r\n        .then((res) => { \r\n            setStands(res.data);\r\n        })\r\n        .catch((err)=>console.log(err));\r\n\r\n        axios.get('http://localhost:8000/api/ingredient')\r\n            .then(res => {\r\n                setIngredients(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        axios.get(`http://localhost:8000/api/transactions/stand/${standId}`)\r\n            .then( res => {\r\n                console.log(res.data);\r\n                setAllTransactions(res.data);\r\n            })\r\n            .catch(err => console.log(err))\r\n    \r\n    }, [])\r\n\r\n\r\n    let cupTotal = 0, sugarTotal = 0, lemonTotal = 0;\r\n    const lemonsOnly = ingredients.filter(obj => obj.name === 'Lemons');\r\n    const sugarOnly = ingredients.filter(obj => obj.name === 'Plastic Cups');\r\n    const cupsOnly = ingredients.filter(obj => obj.name === 'Bags of Sugar');\r\n    for(let i = 0; i < lemonsOnly.length; i++) {\r\n        lemonTotal += lemonsOnly[i].quantity;\r\n    };\r\n    for(let i = 0; i < sugarOnly.length; i++) {\r\n        sugarTotal += sugarOnly[i].quantity;\r\n    };\r\n    for(let i = 0; i < cupsOnly.length; i++) {\r\n        cupTotal += cupsOnly[i].quantity;\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div style={{display:\"flex\", border:\"2px solid black\", padding:\"25px\", margin:\"25px\"}}>\r\n            <div className=\"rightCol\">\r\n                <h2 style={{textAlign:\"left\"}}>Today's Totals</h2>\r\n                <p style={{textAlign:\"left\"}}>Cups sold: {currentStand.total_cups}</p>\r\n                <p style={{textAlign:\"left\"}}>Total Recipts: ${currentStand.total_sales}</p>\r\n                <p style={{textAlign:\"left\"}}>Tips: ${currentStand.total_tips}</p>\r\n                <p style={{textAlign:\"left\"}}>Costs Incurred: ${currentStand.total_costs_incurred}</p>\r\n                <hr />\r\n                <p style={{textAlign:\"left\"}}>Profit (not including tips): ${currentStand.total_sales - currentStand.total_tips - currentStand.total_costs_incurred}</p>\r\n            </div>\r\n            <div className=\"middleCol\">\r\n                <h2 style={{textAlign:\"left\"}}>Supplies on Hand</h2>\r\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Cups: {cupTotal}</p>\r\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Lemon Slices: {lemonTotal}</p>\r\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Sugar Scoops: {sugarTotal}</p>\r\n            </div>\r\n            <div className=\"rightCol\" style={{marginLeft:\"50px\"}}>\r\n                <h2>Last 5 Sales</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Time</th>\r\n                            <th>Sale Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allTransactions.map((transaction, idx) => \r\n                            <tr key={idx}>\r\n                                <td><Moment format=\"hh:mm A\">{transaction.createdAt}</Moment ></td>\r\n                                <td>${transaction.price}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n            <button className=\"btn btn-success\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToTransaction()}><b>New Transaction</b></button>\r\n            <button className=\"btn btn-danger\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToCloseout()}><b>Close Up Shop</b></button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SessionDashboard","C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\NewSupply.jsx",[],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\index.js",[],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\Dashboard.jsx",["59","60","61","62","63"],[],"C:\\Users\\micha\\OneDrive\\Desktop\\projects\\mernProject\\client\\src\\components\\CloseoutPage.jsx",[],[],{"ruleId":"64","severity":1,"message":"65","line":5,"column":21,"nodeType":"66","messageId":"67","endLine":5,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":30,"column":8,"nodeType":"70","endLine":30,"endColumn":10,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":11,"column":12,"nodeType":"66","messageId":"67","endLine":11,"endColumn":18},{"ruleId":"68","severity":1,"message":"73","line":63,"column":8,"nodeType":"70","endLine":63,"endColumn":10,"suggestions":"74"},{"ruleId":"64","severity":1,"message":"75","line":9,"column":12,"nodeType":"66","messageId":"67","endLine":9,"endColumn":26},{"ruleId":"64","severity":1,"message":"76","line":9,"column":28,"nodeType":"66","messageId":"67","endLine":9,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":31,"column":21,"nodeType":"79","endLine":31,"endColumn":151},{"ruleId":"80","severity":1,"message":"81","line":53,"column":29,"nodeType":"79","endLine":53,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":54,"column":29,"nodeType":"79","endLine":54,"endColumn":41},"no-unused-vars","'transactionId' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'stand', 'standId', 'transaction', and 'transactionId'. Either include them or remove the dependency array.","ArrayExpression",["82"],"'stands' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'standId'. Either include it or remove the dependency array.",["83"],"'currentSession' is assigned a value but never used.","'setCurrentSession' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [stand, standId, transaction, transactionId]",{"range":"88","text":"89"},"Update the dependencies array to be: [standId]",{"range":"90","text":"91"},[1057,1059],"[stand, standId, transaction, transactionId]",[2089,2091],"[standId]"]