[{"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/index.js":"1","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/App.js":"2","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/reportWebVitals.js":"3","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Dashboard.jsx":"4","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/SessionDashboard.jsx":"5","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/TransactionPage.jsx":"6","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/InvoicePage.jsx":"7","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Receipt.jsx":"8","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/CloseoutPage.jsx":"9","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/NewSupply.jsx":"10"},{"size":591,"mtime":1648493805720,"results":"11","hashOfConfig":"12"},{"size":1202,"mtime":1648689302606,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1648420626327,"results":"14","hashOfConfig":"12"},{"size":4114,"mtime":1648680557937,"results":"15","hashOfConfig":"12"},{"size":4933,"mtime":1648691985318,"results":"16","hashOfConfig":"12"},{"size":627,"mtime":1648524744002,"results":"17","hashOfConfig":"12"},{"size":718,"mtime":1648526611431,"results":"18","hashOfConfig":"12"},{"size":736,"mtime":1648526611432,"results":"19","hashOfConfig":"12"},{"size":772,"mtime":1648527833433,"results":"20","hashOfConfig":"12"},{"size":1792,"mtime":1648594229337,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"laqvx4",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/index.js",[],[],["56","57"],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/App.js",["58"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport SessionDashboard from './components/SessionDashboard';\nimport TransactionPage from './components/TransactionPage';\nimport InvoicePage from './components/InvoicePage';\nimport Receipt from './components/Receipt';\nimport CloseoutPage from './components/CloseoutPage';\nimport NewSupply from './components/NewSupply.jsx'\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={\"/\"}>\n          <Dashboard />\n        </Route>\n        <Route exact path={\"/session/:standId\"}>\n          <SessionDashboard />\n        </Route>\n        <Route exact path={\"/transaction-page\"}>\n          <TransactionPage />\n        </Route>\n        <Route exact path={\"/invoice-page\"}>\n          <InvoicePage />\n        </Route>\n        <Route exact path={\"/receipt\"}>\n          <Receipt />\n        </Route>\n        <Route exact path={\"/closeout/:id\"}>\n          <CloseoutPage />\n        </Route>\n        <Route exact path={\"/add-supply\"}>\n          <NewSupply />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/reportWebVitals.js",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Dashboard.jsx",["59","60","61","62","63"],[],"import {useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\n\nconst Dashboard = () => {\n    const history = useHistory();\n    const [stands, setStands] = useState([]);\n    const [currentSession, setCurrentSession] = useState(\"\");\n\n    const startStand = () => {\n        axios.post('http://localhost:8000/api/stands')\n        .then((res)=> history.push(`/session/${res.data._id}`))\n        .catch((err)=>console.log(err))  \n    };\n\n    const addSupply = () => {\n        history.push(\"/add-supply\");\n    };\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/stands/`)\n        .then((res) => {setStands(res.data)})\n        .catch((err) => console.log(err))\n    })\n\n    return (\n        <div>\n            <div className=\"topRow\" style={{ display:\"flex\", alignItems:\"center\"}}>\n                <div>\n                    <img style={{ width: \"75px\", margin: \"25px\" }} src=\"https://image.shutterstock.com/image-vector/lemon-logo-260nw-581576533.jpg\" />\n                </div>\n                <div style={{flexDirection:\"row\", textAlign:\"center\", justifyContent:\"center\"}}>\n                    <h1 style={{justifyContent:\"center\"}}>Dashboard</h1>\n                </div>     \n            </div>\n            <div className=\"middleRow\" style={{ display:\"flex\"}}>\n                <div className=\"leftCol\">\n                    <button className=\"btn btn-success\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>startStand()}><b>Open Stand</b></button>\n                    <button className=\"btn btn-primary\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>addSupply()}><b>Add Supplies</b></button>\n                </div>\n                <div className=\"middleCol\">\n                    <div className=\"standState\" style={{border:\"solid black 2px\", padding:\"30px\", margin:\"25px\"}}>\n                        <h2>Per Cup Breakdown</h2>\n                        <p>Current Price per Cup: $4</p>\n                        <hr style={{margin:\"15px\"}} />\n                        <p>Cost of Lemon per Cup: $1</p>\n                        <p>Cost of Surgar Mix per Cup: $0.25</p>\n                        <p>Cost of Plastic Cup: $.10</p>\n                        <hr style={{margin:\"15px\"}} />\n                        <p>Profit per Cup: $2.65</p>\n                        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                            <a href=\"#\">Change Price</a>\n                            <a href=\"#\">Change Recipe</a>\n                        </div>\n                        <hr style={{margin:\"15px\"}} />\n                        <hr style={{margin:\"15px\"}} />\n                        <h2>Supplies on Hand</h2>\n                        <p>Lemons: 4</p>\n                        <p>Lemonade Mix Scoops: 30</p>\n                        <p>Cups: 30</p>\n                    </div>\n                </div>\n                <div className=\"rightCol\">\n                <div className=\"tableHolder\" style={{marginTop:\"25px\", border:\"solid black 2px\", padding:\"25px\"}}>\n                    <h2>Past Stands</h2>\n                    <table className=\"table\">\n                            <thead>\n                                <th>Date</th>\n                                <th>Total Sales</th>\n                            </thead>\n                            <tbody>\n                                {stands.map((stand, idx) => {\n                                    return (\n                                        <tr key={idx}>\n                                            <td><Moment format=\"MM/DD/YYYY\">{stand.createdAt}</Moment ></td>\n                                            <td>${stand.total_sales}</td>\n                                        </tr>\n                                    )\n                                })}\n                        </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/SessionDashboard.jsx",["64"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\"\n\nconst SessionDashboard = () => {\n    const history = useHistory();\n    const { standId } = useParams();\n    const [currentStand, setCurrentStand] = useState({});\n    const [stands, setStands] = useState([]);\n    const [isDeleted, setIsDeleted] = useState(false);\n\n    const goToTransaction = () => {\n        axios.post('http://localhost:8000/api/transactions')\n        .then((res)=> history.push(`/transaction-page/${standId}/${res.data._id}`))\n        .catch((err)=>console.log(err))\n    };\n\n    const goToCloseout = () => {\n        \n        const updatedStand = {\n            ...currentStand,\n            is_open: false\n        }\n        \n        axios.put(`http://localhost:8000/api/stands/${standId}`, updatedStand)\n        .then((res)=> {\n            console.log(res);\n            setCurrentStand(updatedStand)})\n        .catch((err)=>console.log(err))\n        history.push(`/closeout/${standId}`);\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/stands/${standId}`)\n        .then((res)=>setCurrentStand(res.data))\n        .catch((err)=>console.log(err))\n\n        axios.get('http://localhost:8000/api/stands')\n        .then((res) => { \n            setStands(res.data); \n            setIsDeleted(false)})\n        .catch((err)=>console.log(err))\n    }, [isDeleted])\n\n    const handleDelete = (deleteStandId) => {\n        axios.delete('http://localhost:8000/api/stands/'+deleteStandId)\n        .then((res)=>{\n            setIsDeleted(true)\n            setStands(stands.filter(stand => stand._id===deleteStandId))\n        })\n        .catch((err)=>console.log(err))\n    }\n    \n    return (\n        <div>\n        <div style={{display:\"flex\", border:\"2px solid black\", padding:\"25px\", margin:\"25px\"}}>\n            <div className=\"rightCol\">\n                <h2 style={{textAlign:\"left\"}}>Today's Totals</h2>\n                <p style={{textAlign:\"left\"}}>Cups sold: {currentStand.total_cups}</p>\n                <p style={{textAlign:\"left\"}}>Total Recipts: ${currentStand.total_sales}</p>\n                <p style={{textAlign:\"left\"}}>Tips: ${currentStand.total_tips}</p>\n                <p style={{textAlign:\"left\"}}>Costs Incurred: ${currentStand.total_costs_incurred}</p>\n                <hr />\n                <p style={{textAlign:\"left\"}}>Profit (not including tips): ${currentStand.total_sales - currentStand.total_tips - currentStand.total_costs_incurred}</p>\n            </div>\n            <div className=\"middleCol\">\n                <h2 style={{textAlign:\"left\"}}>Supplies on Hand</h2>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Cups: 15</p>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Lemon Slices: 12</p>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Sugar Scoops: 30</p>\n            </div>\n            <div className=\"rightCol\" style={{marginLeft:\"50px\"}}>\n                <h2>Last 5 Sales</h2>\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Sale Amount</th>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>11:32 AM</td>\n                            <td>$18</td>\n                        </tr>\n                        <tr>\n                            <td>10:06 AM</td>\n                            <td>$8</td>\n                        </tr>\n                        <tr>\n                            <td>10:06 AM</td>\n                            <td>$8</td>\n                        </tr>\n                        <tr>\n                            <td>9:45 AM</td>\n                            <td>$4</td>\n                        </tr>\n                        <tr>\n                            <td>9:30 AM</td>\n                            <td>$12</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n            <button className=\"btn btn-success\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToTransaction()}><b>New Transaction</b></button>\n            <button className=\"btn btn-danger\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToCloseout()}><b>Close Up Shop</b></button>\n        </div>\n        <div>\n            {stands.map((stand, idx) => {\n                return (\n                    <div key={idx}>\n                        <p>{stand.is_open ? \"open\" : \"closed\"}</p>\n                        <button className=\"btn btn-danger\" onClick={()=>handleDelete(stand._id)}>Delete</button>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n    )\n}\n\nexport default SessionDashboard","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/TransactionPage.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/InvoicePage.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Receipt.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/CloseoutPage.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/NewSupply.jsx",[],[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":9,"column":12,"nodeType":"71","messageId":"72","endLine":9,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":9,"column":28,"nodeType":"71","messageId":"72","endLine":9,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":31,"column":21,"nodeType":"77","endLine":31,"endColumn":151},{"ruleId":"78","severity":1,"message":"79","line":53,"column":29,"nodeType":"77","endLine":53,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":54,"column":29,"nodeType":"77","endLine":54,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":43,"column":8,"nodeType":"82","endLine":43,"endColumn":19,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'currentSession' is assigned a value but never used.","'setCurrentSession' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'standId'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [isDeleted, standId]",{"range":"89","text":"90"},[1412,1423],"[isDeleted, standId]"]