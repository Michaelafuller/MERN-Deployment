[{"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/index.js":"1","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/App.js":"2","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/reportWebVitals.js":"3","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Dashboard.jsx":"4","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/SessionDashboard.jsx":"5","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/TransactionPage.jsx":"6","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/InvoicePage.jsx":"7","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Receipt.jsx":"8","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/CloseoutPage.jsx":"9","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/NewSupply.jsx":"10"},{"size":591,"mtime":1648493805720,"results":"11","hashOfConfig":"12"},{"size":1274,"mtime":1648707015838,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1648420626327,"results":"14","hashOfConfig":"12"},{"size":4114,"mtime":1648693603500,"results":"15","hashOfConfig":"12"},{"size":5002,"mtime":1648698713795,"results":"16","hashOfConfig":"12"},{"size":1573,"mtime":1648704073360,"results":"17","hashOfConfig":"12"},{"size":2449,"mtime":1648710382418,"results":"18","hashOfConfig":"12"},{"size":809,"mtime":1648708275677,"results":"19","hashOfConfig":"12"},{"size":772,"mtime":1648693603499,"results":"20","hashOfConfig":"12"},{"size":1792,"mtime":1648693603501,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"laqvx4",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/index.js",[],[],["58","59"],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/App.js",["60"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport SessionDashboard from './components/SessionDashboard';\nimport TransactionPage from './components/TransactionPage';\nimport InvoicePage from './components/InvoicePage';\nimport Receipt from './components/Receipt';\nimport CloseoutPage from './components/CloseoutPage';\nimport NewSupply from './components/NewSupply.jsx'\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={\"/\"}>\n          <Dashboard />\n        </Route>\n        <Route exact path={\"/session/:standId\"}>\n          <SessionDashboard />\n        </Route>\n        <Route exact path={\"/transaction-page/:standId/:transactionId\"}>\n          <TransactionPage />\n        </Route>\n        <Route exact path={\"/invoice-page/:standId/:transactionId\"}>\n          <InvoicePage />\n        </Route>\n        <Route exact path={\"/receipt/:standId/:transactionId\"}>\n          <Receipt />\n        </Route>\n        <Route exact path={\"/closeout/:id\"}>\n          <CloseoutPage />\n        </Route>\n        <Route exact path={\"/add-supply\"}>\n          <NewSupply />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n",["61","62"],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/reportWebVitals.js",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Dashboard.jsx",["63","64","65","66","67"],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/SessionDashboard.jsx",["68"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\"\n\nconst SessionDashboard = () => {\n    const history = useHistory();\n    const { standId } = useParams();\n    const [currentStand, setCurrentStand] = useState({});\n    const [stands, setStands] = useState([]);\n    const [isDeleted, setIsDeleted] = useState(false);\n\n    const goToTransaction = () => {\n        axios.post('http://localhost:8000/api/transactions/')\n        .then((res)=> {\n            let transaction = res.data;\n            history.push(`/transaction-page/${standId}/${transaction._id}`);\n        })\n        .catch((err)=>console.log(err))\n    };\n\n    const goToCloseout = () => {\n        \n        const updatedStand = {\n            ...currentStand,\n            is_open: false\n        }\n        \n        axios.put(`http://localhost:8000/api/stands/${standId}`, updatedStand)\n        .then((res)=> {\n            console.log(res);\n            setCurrentStand(updatedStand)})\n        .catch((err)=>console.log(err))\n        history.push(`/closeout/${standId}`);\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/stands/${standId}`)\n        .then((res)=>setCurrentStand(res.data))\n        .catch((err)=>console.log(err))\n\n        axios.get('http://localhost:8000/api/stands')\n        .then((res) => { \n            setStands(res.data); \n            setIsDeleted(false)})\n        .catch((err)=>console.log(err))\n    }, [isDeleted])\n\n    const handleDelete = (deleteStandId) => {\n        axios.delete('http://localhost:8000/api/stands/'+deleteStandId)\n        .then((res)=>{\n            setIsDeleted(true)\n            setStands(stands.filter(stand => stand._id===deleteStandId))\n        })\n        .catch((err)=>console.log(err))\n    }\n    \n    return (\n        <div>\n        <div style={{display:\"flex\", border:\"2px solid black\", padding:\"25px\", margin:\"25px\"}}>\n            <div className=\"rightCol\">\n                <h2 style={{textAlign:\"left\"}}>Today's Totals</h2>\n                <p style={{textAlign:\"left\"}}>Cups sold: {currentStand.total_cups}</p>\n                <p style={{textAlign:\"left\"}}>Total Recipts: ${currentStand.total_sales}</p>\n                <p style={{textAlign:\"left\"}}>Tips: ${currentStand.total_tips}</p>\n                <p style={{textAlign:\"left\"}}>Costs Incurred: ${currentStand.total_costs_incurred}</p>\n                <hr />\n                <p style={{textAlign:\"left\"}}>Profit (not including tips): ${currentStand.total_sales - currentStand.total_tips - currentStand.total_costs_incurred}</p>\n            </div>\n            <div className=\"middleCol\">\n                <h2 style={{textAlign:\"left\"}}>Supplies on Hand</h2>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Cups: 15</p>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Lemon Slices: 12</p>\n                <p style={{textAlign:\"left\", marginLeft:\"15px\"}}>Sugar Scoops: 30</p>\n            </div>\n            <div className=\"rightCol\" style={{marginLeft:\"50px\"}}>\n                <h2>Last 5 Sales</h2>\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Sale Amount</th>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>11:32 AM</td>\n                            <td>$18</td>\n                        </tr>\n                        <tr>\n                            <td>10:06 AM</td>\n                            <td>$8</td>\n                        </tr>\n                        <tr>\n                            <td>10:06 AM</td>\n                            <td>$8</td>\n                        </tr>\n                        <tr>\n                            <td>9:45 AM</td>\n                            <td>$4</td>\n                        </tr>\n                        <tr>\n                            <td>9:30 AM</td>\n                            <td>$12</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n            <button className=\"btn btn-success\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToTransaction()}><b>New Transaction</b></button>\n            <button className=\"btn btn-danger\" style={{fontSize:\"30px\", display:\"block\", margin:\"25px\", height:\"150px\", width:\"400px\"}} onClick={()=>goToCloseout()}><b>Close Up Shop</b></button>\n        </div>\n        <div>\n            {stands.map((stand, idx) => {\n                return (\n                    <div key={idx}>\n                        <p>{stand.is_open ? \"open\" : \"closed\"}</p>\n                        <button className=\"btn btn-danger\" onClick={()=>handleDelete(stand._id)}>Delete</button>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n    )\n}\n\nexport default SessionDashboard","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/TransactionPage.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/InvoicePage.jsx",["69"],[],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nconst InvoicePage = () => {\n    const history = useHistory();\n    const {standId, transactionId} = useParams();\n    const [transaction, setTransaction] = useState({});\n    const [stand, setStand] = useState({});\n    const [tip, setTip] = useState(0);\n    \n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/stands/${standId}`)\n        .then((res)=>{\n            console.log(res.data, stand, \"im tired\");\n            setStand(res.data);\n            console.log(stand, 'im tired 2')\n        })\n        .catch((err)=>console.log(err))\n        \n        axios.get(`http://localhost:8000/api/transactions/${transactionId}`)\n        .then((res)=> {\n            console.log(res);\n            setTransaction(res.data)\n        })\n        .catch((err)=>console.log(err))\n\n    }, []) \n    \n    const toReceipt = (e) => {\n        e.preventDefault();\n\n        const updatedTransaction = {\n            ...transaction,\n            tip: tip,\n            price: 4*transaction.lemonades\n        }\n\n        axios.put(`http://localhost:8000/api/transactions/${transactionId}`, updatedTransaction)\n        .then((res)=>console.log(res))\n        .catch((err)=>console.log(err))\n\n        console.log(stand, 'IM THE STAND');\n\n        const updatedStand = {\n            ...stand,\n            total_sales: stand.total_sales + transaction.price,\n            total_cups: stand.total_cups + transaction.lemonades,\n            total_tips: stand.total_tips + transaction.tip\n        }\n\n        axios.put(`http://localhost:8000/api/stands/${standId}`, updatedStand)\n        .then((res)=>console.log(res))\n        .catch((err)=>console.log(err))\n\n        history.push(`/receipt/${standId}/${transactionId}`)\n    }\n\n    return (\n        <div>\n            <form className=\"form\" style={{margin:\"25px\", padding:\"15px\", border:\"solid black 2px\"}} onSubmit={(e)=>toReceipt(e)}>\n                <h2>Invoice</h2>\n                <p>{transaction.lemonades} Lemonades @ $4/each</p>\n                <hr />\n                <p>Total Price: ${transaction.lemonades * 4}</p>\n                Add Gratuity: <input type=\"number\" style={{marginBottom:\"15px\"}} onChange={(e)=>setTip(e.target.value)}/><br />\n                <button className=\"btn btn-primary\">Payment Received</button>\n            </form>\n        </div>\n    )\n}\n\nexport default InvoicePage;","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/Receipt.jsx",["70"],[],"import {useHistory, useParams} from 'react-router-dom';\n\nconst Receipt = () => {\n    const history = useHistory();\n    const {standId, transactionId} = useParams();\n\n    const backToSessionDashboard = () => {\n        history.push(`/session/${standId}`);\n    };\n\n    return (\n        <div style={{padding:\"25px\", margin:\"25px\", border:\"solid black 2px\"}}>\n            <h1>Thank You!</h1>\n            <p>Would you like an emailed receipt?</p>\n            <input />\n            <div>\n                <button className=\"btn btn-success\" style={{margin:\"15px\"}} onClick={()=>backToSessionDashboard()}>Yes</button>\n                <button className=\"btn btn-warning\" style={{margin:\"15px\"}} onClick={()=>backToSessionDashboard()}>No Thanks</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Receipt;","/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/CloseoutPage.jsx",[],[],"/Users/brendansmith/Desktop/MERN/Lemonmade/MERN-Deployment/client/src/components/NewSupply.jsx",[],[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"81","line":9,"column":12,"nodeType":"77","messageId":"78","endLine":9,"endColumn":26},{"ruleId":"75","severity":1,"message":"82","line":9,"column":28,"nodeType":"77","messageId":"78","endLine":9,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":31,"column":21,"nodeType":"85","endLine":31,"endColumn":151},{"ruleId":"86","severity":1,"message":"87","line":53,"column":29,"nodeType":"85","endLine":53,"endColumn":41},{"ruleId":"86","severity":1,"message":"87","line":54,"column":29,"nodeType":"85","endLine":54,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":46,"column":8,"nodeType":"90","endLine":46,"endColumn":19,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":28,"column":8,"nodeType":"90","endLine":28,"endColumn":10,"suggestions":"93"},{"ruleId":"75","severity":1,"message":"94","line":5,"column":21,"nodeType":"77","messageId":"78","endLine":5,"endColumn":34},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["95"],["96"],"'currentSession' is assigned a value but never used.","'setCurrentSession' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'standId'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has missing dependencies: 'stand', 'standId', and 'transactionId'. Either include them or remove the dependency array.",["98"],"'transactionId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [isDeleted, standId]",{"range":"103","text":"104"},"Update the dependencies array to be: [stand, standId, transactionId]",{"range":"105","text":"106"},[1481,1492],"[isDeleted, standId]",[913,915],"[stand, standId, transactionId]"]